name: Update imagineRio

on:
  repository_dispatch:
    types: [submodule-update]
  workflow_dispatch:
    inputs:
      retile:
        description: "Retile images"
        type: boolean
        required: false
        default: false
      reprocess:
        description: "Reprocess all items"
        type: boolean
        required: false
        default: false
  schedule:
    # Run at 00:00 UTC on the first day of every month
    - cron: "0 0 1 * *"

jobs:
  update-process:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
        with:
          submodules: true
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

      - name: Update submodule to latest commit
        run: |
          cd data
          git checkout main
          git pull origin main

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"

      - name: Install dependencies
        run: npm install
        
      - name: Install Chromium and dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libx11-xcb1 \
            libxcomposite1 \
            libxdamage1 \
            libxrandr2 \
            libatk1.0-0 \
            libatk-bridge2.0-0 \
            libcups2 \
            libdbus-1-3 \
            libdrm2 \
            libgtk-3-0 \
            libnspr4 \
            libnss3 \
            libxss1 \
            libxtst6 \
            fonts-liberation \
            libappindicator3-1 \
            xdg-utils \
            chromium-browser

      - name: Fetch data
        run: node imaginerio-etl/utils/fetchData.js
        env:
          PUPPETEER_SKIP_CHROMIUM_DOWNLOAD: "true"
          PUPPETEER_EXECUTABLE_PATH: "/usr/bin/chromium-browser"
          JSTOR_USER: ${{ secrets.JSTOR_USER }}
          JSTOR_PASSWORD: ${{ secrets.JSTOR_PASSWORD }}
          JSTOR_PROJECT: ${{ secrets.JSTOR_PROJECT }}
          JSTOR_VOCABULARY: ${{ secrets.JSTOR_VOCABULARY }}

      - name: Build Docker image
        run: docker build . -t etl

      - name: Run Docker Image
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          ARCGIS_USER: ${{ secrets.ARCGIS_USER }}
          ARCGIS_PASSWORD: ${{ secrets.ARCGIS_PASSWORD }}
          ARCGIS_PORTAL: ${{ secrets.ARCGIS_PORTAL }}
          VIEWCONES_LAYER_URL: ${{ secrets.VIEWCONES_LAYER_URL }}
          RETILE: ${{ github.event.inputs.retile }}
          REPROCESS: ${{ github.event.inputs.reprocess }}
        run: |
          docker run \
            -e AWS_SECRET_ACCESS_KEY \
            -e AWS_ACCESS_KEY_ID \
            -e ARCGIS_USER \
            -e ARCGIS_PASSWORD \
            -e ARCGIS_PORTAL \
            -e VIEWCONES_LAYER_URL \
            -e RETILE \
            -v $(pwd)/data:/usr/src/app/data \
            etl

      - name: Commit and push changes
        run: |
          cd data
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add .
          git commit -m "Auto updated data" && git push origin HEAD:main || echo "No changes to commit"
          cd ..
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add data
          git commit -m "Auto updated submodule reference" && git push || echo "No changes to commit"
